{"version":3,"sources":["views/MovieView.module.css","views/MovieView.js"],"names":["module","exports","MovieReviewView","lazy","MovieCastView","MovieDetailsPage","movieId","useParams","url","useRouteMatch","useState","movie","setMovie","casts","setCasts","reviews","setReviews","useEffect","moviesApi","then","className","css","card","image","src","poster_path","alt","title","description","release_date","substr","Number","vote_average","overview","genres","map","genre","list","name","reviewList","to","path"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,YAAc,+BAA+B,OAAS,0BAA0B,KAAO,wBAAwB,WAAa,gC,gJCKxMC,EAAkBC,gBAAK,kBAC3B,gCAEIC,EAAgBD,gBAAK,kBACzB,gCAGa,SAASE,IAAoB,IAClCC,EAAYC,cAAZD,QACAE,EAAQC,cAARD,IAFiC,EAIfE,mBAAS,MAJM,mBAIlCC,EAJkC,KAI3BC,EAJ2B,OAKfF,mBAAS,MALM,mBAKlCG,EALkC,KAK3BC,EAL2B,OAMXJ,mBAAS,MANE,mBAMlCK,EANkC,KAMzBC,EANyB,KAczC,OANAC,qBAAU,WACRC,IAAuBZ,GAASa,KAAKP,GACrCM,IAAoBZ,GAASa,KAAKL,GAClCI,IAAuBZ,GAASa,KAAKH,KACpC,CAACV,IAGF,qCACGK,GACC,sBAAKS,UAAWC,IAAIC,KAApB,UACE,qBAAKF,UAAWC,IAAIE,MAApB,SACE,qBACEC,IAAG,0CAAqCb,EAAMc,aAC9CC,IAAKf,EAAMgB,UAIf,sBAAKP,UAAWC,IAAIO,YAApB,UACE,uCAAQjB,EAAMgB,MAAd,aAAwBhB,EAAMkB,aAAaC,OAAO,EAAG,GAArD,OACA,6CAAgBC,OAA4B,GAArBpB,EAAMqB,cAA7B,QAEA,0CACA,4BAAIrB,EAAMsB,WAEV,wCACA,oBAAIb,UAAWC,IAAIa,OAAnB,SACGvB,EAAMuB,OAAOC,KAAI,SAACC,GAAD,OAChB,oBAAIhB,UAAWC,IAAIgB,KAAnB,SACGD,EAAME,MADqBF,EAAME,iBAS9C,uBACA,gCACE,uDACA,qBAAIlB,UAAWC,IAAIkB,WAAnB,UACE,6BACE,cAAC,IAAD,CAASC,GAAE,UAAKhC,EAAL,SAAX,oBAEF,6BACE,cAAC,IAAD,CAASgC,GAAE,UAAKhC,EAAL,YAAX,6BAIN,uBAEA,cAAC,IAAD,CAAOiC,KAAK,wBAAZ,SACG5B,GAAS,cAACT,EAAD,CAAeS,MAAOA,MAGlC,cAAC,IAAD,CAAO4B,KAAK,2BAAZ,SACG1B,GAAW,cAACb,EAAD,CAAiBa,QAASA","file":"static/js/movie-view.7129a120.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"MovieView_card__3ESiw\",\"image\":\"MovieView_image__YzJxP\",\"description\":\"MovieView_description__3yD7f\",\"genres\":\"MovieView_genres__2ICCB\",\"list\":\"MovieView_list__1qyxz\",\"reviewList\":\"MovieView_reviewList__1_3Cy\"};","import { useState, useEffect, lazy } from 'react'\nimport { useParams, Route, NavLink } from 'react-router-dom'\nimport { useRouteMatch } from 'react-router'\nimport * as moviesApi from '../services/movies-api'\nimport css from '../views/MovieView.module.css'\n\nconst MovieReviewView = lazy(() =>\n  import('./MovieReviewView' /* webpackChunkName: \"movie-review-view\" */),\n)\nconst MovieCastView = lazy(() =>\n  import('./MovieCastView' /* webpackChunkName: \"movie-cast-view\" */),\n)\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams()\n  const { url } = useRouteMatch()\n\n  const [movie, setMovie] = useState(null)\n  const [casts, setCasts] = useState(null)\n  const [reviews, setReviews] = useState(null)\n\n  useEffect(() => {\n    moviesApi.fetchDetails(movieId).then(setMovie)\n    moviesApi.fetchCast(movieId).then(setCasts)\n    moviesApi.fetchReviews(movieId).then(setReviews)\n  }, [movieId])\n\n  return (\n    <>\n      {movie && (\n        <div className={css.card}>\n          <div className={css.image}>\n            <img\n              src={`https://image.tmdb.org/t/p/w400/${movie.poster_path}`}\n              alt={movie.title}\n            />\n          </div>\n\n          <div className={css.description}>\n            <h2>{`${movie.title} (${movie.release_date.substr(0, 4)})`}</h2>\n            <p>User score: {Number(movie.vote_average * 10)} %</p>\n\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n\n            <h4>Genres</h4>\n            <ul className={css.genres}>\n              {movie.genres.map((genre) => (\n                <li className={css.list} key={genre.name}>\n                  {genre.name}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n\n      <hr />\n      <div>\n        <p>Additional information</p>\n        <ul className={css.reviewList}>\n          <li>\n            <NavLink to={`${url}/cast`}>Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to={`${url}/reviews`}>Reviews</NavLink>\n          </li>\n        </ul>\n      </div>\n      <hr />\n\n      <Route path=\"/movies/:movieId/cast\">\n        {casts && <MovieCastView casts={casts} />}\n      </Route>\n\n      <Route path=\"/movies/:movieId/reviews\">\n        {reviews && <MovieReviewView reviews={reviews} />}\n      </Route>\n    </>\n  )\n}\n"],"sourceRoot":""}