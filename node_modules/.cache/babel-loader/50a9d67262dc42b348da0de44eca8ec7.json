{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sima/Downloads/react-21-22-10-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sima/Downloads/react-21-22-10-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var BASE_URL='http://localhost:4040';function fetchWithErrorHandling(){return _fetchWithErrorHandling.apply(this,arguments);}function _fetchWithErrorHandling(){_fetchWithErrorHandling=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var url,config,response,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=_args.length>0&&_args[0]!==undefined?_args[0]:'';config=_args.length>1&&_args[1]!==undefined?_args[1]:{};_context.next=4;return fetch(url,config);case 4:response=_context.sent;if(!response.ok){_context.next=11;break;}_context.next=8;return response.json();case 8:_context.t0=_context.sent;_context.next=12;break;case 11:_context.t0=Promise.reject(new Error('Not found'));case 12:return _context.abrupt(\"return\",_context.t0);case 13:case\"end\":return _context.stop();}}},_callee);}));return _fetchWithErrorHandling.apply(this,arguments);}export function fetchAuthors(){return fetchWithErrorHandling(\"\".concat(BASE_URL,\"/authors?_embed=books\"));}export function fetchBooks(){return fetchWithErrorHandling(\"\".concat(BASE_URL,\"/books\"));}export function fetchBookById(bookId){return fetchWithErrorHandling(\"\".concat(BASE_URL,\"/books/\").concat(bookId,\"?_expand=author\"));}","map":{"version":3,"sources":["/Users/sima/Downloads/react-21-22-10-/src/services/bookshelf-api.js"],"names":["BASE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchAuthors","fetchBooks","fetchBookById","bookId"],"mappings":"qTAAA,GAAMA,CAAAA,QAAQ,CAAG,uBAAjB,C,QAEeC,CAAAA,sB,4KAAf,2KAAsCC,GAAtC,+CAA4C,EAA5C,CAAgDC,MAAhD,+CAAyD,EAAzD,uBACyBC,CAAAA,KAAK,CAACF,GAAD,CAAMC,MAAN,CAD9B,QACQE,QADR,mBAESA,QAAQ,CAACC,EAFlB,gDAGYD,CAAAA,QAAQ,CAACE,IAAT,EAHZ,6EAIMC,OAAO,CAACC,MAAR,CAAe,GAAIC,CAAAA,KAAJ,CAAU,WAAV,CAAf,CAJN,6G,yDAOA,MAAO,SAASC,CAAAA,YAAT,EAAwB,CAC7B,MAAOV,CAAAA,sBAAsB,WAAID,QAAJ,0BAA7B,CACD,CAED,MAAO,SAASY,CAAAA,UAAT,EAAsB,CAC3B,MAAOX,CAAAA,sBAAsB,WAAID,QAAJ,WAA7B,CACD,CAED,MAAO,SAASa,CAAAA,aAAT,CAAuBC,MAAvB,CAA+B,CACpC,MAAOb,CAAAA,sBAAsB,WAAID,QAAJ,mBAAsBc,MAAtB,oBAA7B,CACD","sourcesContent":["const BASE_URL = 'http://localhost:4040';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchAuthors() {\n  return fetchWithErrorHandling(`${BASE_URL}/authors?_embed=books`);\n}\n\nexport function fetchBooks() {\n  return fetchWithErrorHandling(`${BASE_URL}/books`);\n}\n\nexport function fetchBookById(bookId) {\n  return fetchWithErrorHandling(`${BASE_URL}/books/${bookId}?_expand=author`);\n}\n"]},"metadata":{},"sourceType":"module"}