{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sima/Downloads/react-21-22-10-/src/views/TableView.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, lazy } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Table from '../components/Table/Table';\nimport SortSelector from '../components/SortSelector/SortSelector';\nconst initialState = [{\n  id: 1,\n  value: 100\n}, {\n  id: 2,\n  value: 400\n}, {\n  id: 3,\n  value: 200\n}, {\n  id: 4,\n  value: 500\n}, {\n  id: 5,\n  value: 300\n}];\nconst sortOptions = [{\n  value: 'ascending',\n  label: 'По возрастанию'\n}, {\n  value: 'descending',\n  label: 'По убыванию'\n}];\nexport default function TableView() {\n  _s();\n\n  var _URLSearchParams$get;\n\n  const history = useHistory();\n  const location = useLocation();\n  const [expenses, setExpenses] = useState(initialState);\n  const sortOrder = (_URLSearchParams$get = new URLSearchParams(location.search).get('sortBy')) !== null && _URLSearchParams$get !== void 0 ? _URLSearchParams$get : 'ascending';\n\n  const onSortOrderChange = order => {\n    history.push({ ...location,\n      search: `sortBy=${order}`\n    });\n  };\n\n  useEffect(() => {\n    if (location.search !== '') {\n      return;\n    }\n\n    history.push({ ...location,\n      search: `sortBy=ascending`\n    });\n  }, [history, location]);\n  useEffect(() => {\n    setExpenses(prevExpenses => [...prevExpenses].sort((a, b) => {\n      return sortOrder === 'ascending' ? a.value - b.value : b.value - a.value;\n    }));\n  }, [sortOrder]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SortSelector, {\n      options: sortOptions,\n      onChange: onSortOrderChange,\n      value: sortOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      items: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TableView, \"vzMShqziWKPbpF5PMaKNSJJt2nI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = TableView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableView\");","map":{"version":3,"sources":["/Users/sima/Downloads/react-21-22-10-/src/views/TableView.js"],"names":["useState","useEffect","lazy","useHistory","useLocation","Table","SortSelector","initialState","id","value","sortOptions","label","TableView","history","location","expenses","setExpenses","sortOrder","URLSearchParams","search","get","onSortOrderChange","order","push","prevExpenses","sort","a","b"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,IAA9B,QAA0C,OAA1C;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AAEA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CADmB,EAEnB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAFmB,EAGnB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAHmB,EAInB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAJmB,EAKnB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CALmB,CAArB;AAQA,MAAMC,WAAW,GAAG,CAClB;AAAED,EAAAA,KAAK,EAAE,WAAT;AAAsBE,EAAAA,KAAK,EAAE;AAA7B,CADkB,EAElB;AAAEF,EAAAA,KAAK,EAAE,YAAT;AAAuBE,EAAAA,KAAK,EAAE;AAA9B,CAFkB,CAApB;AAKA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAAA;;AAClC,QAAMC,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAMW,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAACO,YAAD,CAAxC;AAEA,QAAMU,SAAS,2BACb,IAAIC,eAAJ,CAAoBJ,QAAQ,CAACK,MAA7B,EAAqCC,GAArC,CAAyC,QAAzC,CADa,uEACyC,WADxD;;AAGA,QAAMC,iBAAiB,GAAGC,KAAK,IAAI;AACjCT,IAAAA,OAAO,CAACU,IAAR,CAAa,EAAE,GAAGT,QAAL;AAAeK,MAAAA,MAAM,EAAG,UAASG,KAAM;AAAvC,KAAb;AACD,GAFD;;AAIArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,QAAQ,CAACK,MAAT,KAAoB,EAAxB,EAA4B;AAC1B;AACD;;AAEDN,IAAAA,OAAO,CAACU,IAAR,CAAa,EAAE,GAAGT,QAAL;AAAeK,MAAAA,MAAM,EAAG;AAAxB,KAAb;AACD,GANQ,EAMN,CAACN,OAAD,EAAUC,QAAV,CANM,CAAT;AAQAb,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,WAAW,CAACQ,YAAY,IACtB,CAAC,GAAGA,YAAJ,EAAkBC,IAAlB,CAAuB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC/B,aAAOV,SAAS,KAAK,WAAd,GACHS,CAAC,CAACjB,KAAF,GAAUkB,CAAC,CAAClB,KADT,GAEHkB,CAAC,CAAClB,KAAF,GAAUiB,CAAC,CAACjB,KAFhB;AAGD,KAJD,CADS,CAAX;AAOD,GARQ,EAQN,CAACQ,SAAD,CARM,CAAT;AAUA,sBACE;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,OAAO,EAAEP,WADX;AAEE,MAAA,QAAQ,EAAEW,iBAFZ;AAGE,MAAA,KAAK,EAAEJ;AAHT;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD;;GAxCuBH,S;UACNT,U,EACCC,W;;;KAFKQ,S","sourcesContent":["import { useState, useEffect, lazy } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Table from '../components/Table/Table';\nimport SortSelector from '../components/SortSelector/SortSelector';\n\nconst initialState = [\n  { id: 1, value: 100 },\n  { id: 2, value: 400 },\n  { id: 3, value: 200 },\n  { id: 4, value: 500 },\n  { id: 5, value: 300 },\n];\n\nconst sortOptions = [\n  { value: 'ascending', label: 'По возрастанию' },\n  { value: 'descending', label: 'По убыванию' },\n];\n\nexport default function TableView() {\n  const history = useHistory();\n  const location = useLocation();\n  const [expenses, setExpenses] = useState(initialState);\n\n  const sortOrder =\n    new URLSearchParams(location.search).get('sortBy') ?? 'ascending';\n\n  const onSortOrderChange = order => {\n    history.push({ ...location, search: `sortBy=${order}` });\n  };\n\n  useEffect(() => {\n    if (location.search !== '') {\n      return;\n    }\n\n    history.push({ ...location, search: `sortBy=ascending` });\n  }, [history, location]);\n\n  useEffect(() => {\n    setExpenses(prevExpenses =>\n      [...prevExpenses].sort((a, b) => {\n        return sortOrder === 'ascending'\n          ? a.value - b.value\n          : b.value - a.value;\n      }),\n    );\n  }, [sortOrder]);\n\n  return (\n    <>\n      <SortSelector\n        options={sortOptions}\n        onChange={onSortOrderChange}\n        value={sortOrder}\n      />\n      <Table items={expenses} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}